// === MOTOR TEST with START BUTTON (URC10 + CytronMotorDriver) ===
// Left motor: PWM 5, DIR 4
// Right motor: PWM 6, DIR 7
// Start button: pin 10 (active LOW)

#include <CytronMotorDriver.h>

// Motor setup
CytronMD motorL(PWM_DIR, 5, 4); // Left motor
CytronMD motorR(PWM_DIR, 6, 7); // Right motor

const int START_BUTTON = 10; // Active LOW

// --- Helper functions ---
void stopMotors() {
  motorL.setSpeed(0);
  motorR.setSpeed(0);
}

void setMotors(int leftPWM, int rightPWM) {
  leftPWM  = constrain(leftPWM, -255, 255);
  rightPWM = constrain(rightPWM, -255, 255);
  motorL.setSpeed(map(leftPWM, -255, 255, -100, 100));
  motorR.setSpeed(map(rightPWM, -255, 255, -100, 100));
}

void waitForButtonPress() {
  Serial.println("Press the START button to begin...");
  // Wait until button pressed (LOW)
  while (digitalRead(START_BUTTON) == HIGH) {
    delay(10);
  }
  Serial.println("Button pressed! Starting test...");
  delay(300); // debounce delay
}

void setup() {
  Serial.begin(9600);
  pinMode(START_BUTTON, INPUT_PULLUP);

  Serial.println("=== MOTOR TEST READY ===");
  stopMotors();
}

void loop() {
  // --- Wait for button press before each test cycle ---
  waitForButtonPress();

  // --- Test LEFT motor ---
  Serial.println("Left motor FORWARD");
  setMotors(200, 0);
  delay(1000);

  Serial.println("Left motor STOP");
  stopMotors();
  delay(500);

  Serial.println("Left motor REVERSE");
  setMotors(-200, 0);
  delay(1000);

  stopMotors();
  delay(1000);

  // --- Test RIGHT motor ---
  Serial.println("Right motor FORWARD");
  setMotors(0, 200);
  delay(1000);

  Serial.println("Right motor STOP");
  stopMotors();
  delay(500);

  Serial.println("Right motor REVERSE");
  setMotors(0, -200);
  delay(1000);

  stopMotors();
  Serial.println("=== One full test cycle done ===\n");
  delay(1000);
}
